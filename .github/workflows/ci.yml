name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3.3.0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.3.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: make poetry-download

    - name: Set up cache
      uses: actions/cache@v3.0.11
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}
    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install

    - name: Run style checks
      run: |
        make check-codestyle

    - name: Run tests
      run: |
        make test

    - name: Run safety checks
      run: |
        make check-security

    - name: Build binary wheel and a source tarball
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      run: poetry build

    - name: Publish distribution ðŸ“¦ to PyPI
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v3.4.0
        with:
          configuration: "configs/configuration_repo.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@6034af24fba4e5a8e975aaa6056554efe4c794d0
        with:
          body: ${{steps.github_release.outputs.changelog}}
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-b') || contains(github.ref, '-a') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
